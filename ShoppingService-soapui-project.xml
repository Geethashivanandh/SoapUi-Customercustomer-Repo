<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="220d661f-68fe-4ce5-9e33-9257d40652e3" activeEnvironment="Default" name="ShoppingService" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="6dd6e776-d70d-458a-9077-5bf82f5da031" wsaVersion="NONE" name="ShoppingServiceSoapBinding" type="wsdl" bindingName="{http://expertz.me/service/eCommerce/ShoppingService/1.0}ShoppingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/Moolya/Downloads/ShoppingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\Moolya\Downloads\ShoppingService.wsdl"><con:part><con:url>file:\C:\Users\Moolya\Downloads\ShoppingService.wsdl</con:url><con:content><![CDATA[<definitions name="ShoppingService" targetNamespace="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:sdt="http://expertz.me/data/eCommerce/ShoppingService/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ss="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" schemaLocation="ShoppingService.xsd"/>
    </xsd:schema>
  </types>
  <message name="loginRequest">
    <part name="loginRequest" element="sdt:loginRequest"/>
  </message>
  <message name="loginResponse">
    <part name="sessionId" element="sdt:sessionId"/>
  </message>
  <message name="login_faultMsg">
    <part name="loginFault" element="sdt:faultMessage"/>
  </message>
  <message name="findRequest">
    <part name="findRequest" element="sdt:findRequest"/>
  </message>
  <message name="findResponse">
    <part name="findResponse" element="sdt:findResponse"/>
  </message>
  <message name="find_faultMsg">
    <part name="findFault" element="sdt:faultMessage"/>
  </message>
  <message name="purchaseRequest">
    <part name="purchaseRequest" element="sdt:purchaseRequest"/>
  </message>
  <message name="purchaseResponse">
    <part name="purchaseResponse" element="sdt:purchaseResponse"/>
  </message>
  <message name="purchase_faultMsg">
    <part name="purchaseFault" element="sdt:faultMessage"/>
  </message>
  <message name="logoutRequest">
    <part name="logoutRequest" element="sdt:logoutRequest"/>
  </message>
  <message name="logoutResponse">
    <part name="logoutResponse" element="sdt:logoutResponse"/>
  </message>
  <message name="logout_faultMsg">
    <part name="logoutFault" element="sdt:faultMessage"/>
  </message>
  <portType name="ShoppingServicePt">
    <operation name="login">
      <input message="ss:loginRequest"/>
      <output message="ss:loginResponse"/>
      <fault name="fault" message="ss:login_faultMsg"/>
    </operation>
    <operation name="logout">
      <input message="ss:logoutRequest"/>
      <output message="ss:logoutResponse"/>
      <fault name="fault" message="ss:logout_faultMsg"/>
    </operation>
    <operation name="find">
      <input message="ss:findRequest"/>
      <output message="ss:findResponse"/>
      <fault name="fault" message="ss:find_faultMsg"/>
    </operation>
    <operation name="purchase">
      <input message="ss:purchaseRequest"/>
      <output message="ss:purchaseResponse"/>
      <fault name="fault" message="ss:purchase_faultMsg"/>
    </operation>
  </portType>
  <binding name="ShoppingServiceSoapBinding" type="ss:ShoppingServicePt">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="login">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </fault>
    </operation>
    <operation name="logout">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="find">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purchase">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ShoppingService">
    <port name="ShoppingServicePort" binding="ss:ShoppingServiceSoapBinding">
      <soap:address location="http://localhost:8088/mockShoppingService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Users\Moolya\Downloads\ShoppingService.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:smsg="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <xsd:element name="faultMessage" type="xsd:string"/>
  <xsd:complexType name="FaultMessage">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:string"/>
      <xsd:element name="errorDesc" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="sessionId" type="smsg:SessionId"/>
  <xsd:simpleType name="SessionId">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="PurchaseItem">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="purchaseRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
        <xsd:element name="purchaseItem" type="smsg:PurchaseItem"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="loginRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="username" type="xsd:string"/>
        <xsd:element name="password" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="logoutMessage" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="xsd:string"/>
        <xsd:element name="findString" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="item" type="smsg:ItemType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ItemType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="price" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="purchaseResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="purchaseStatus" type="smsg:PurchaseStatusType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PurchaseStatusType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="stockStatus" type="xsd:string"/>
      <xsd:element name="expectedDelivery" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint></con:endpoints><con:operation id="1c158a3f-403d-4b27-a472-f96b0a7b0b9d" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find" name="find" bindingOperationName="find" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dfb0d2e0-c27f-426c-974b-aabe724d1a8d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:call></con:operation><con:operation id="d15c083a-70df-498a-bd64-75dce02cdef3" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="81d7f9f6-be02-4284-a517-b8951f23c1c1" name="valid request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>geeth</ns:username>\r
         <ns:password>welcome12</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call><con:call id="599b3958-b0a7-479b-b411-8257e191ec99" name="invalid request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>?</ns:username>\r
         <ns:password>?</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ba1b7a74-ac02-42b0-8424-5fdee7890a33" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout" name="logout" bindingOperationName="logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3bcc03c2-ef4c-4200-add4-644e9e4a6a20" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:call></con:operation><con:operation id="7839d750-ddcd-4a47-a0b1-79cba58c8a1c" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase" name="purchase" bindingOperationName="purchase" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="51ad1646-4a80-4dad-a920-d91c260ac3f8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:call></con:operation></con:interface><con:testSuite id="114a9af5-3b5a-43a5-bcb1-b67c94fcd157" name="Shopping Service Functional"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e145a663-bb58-46fe-95c7-4b391e95ff06" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Traditional Logout And Login" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and Password Properties" id="95e2ce92-3ca5-4d76-9810-c8da0fabdfa5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Username</con:name><con:value>Abhilash</con:value></con:property><con:property><con:name>Password</con:name><con:value>Welcome1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Username and password Property Transfer" id="5e9ad0e0-0915-4b54-957a-369db46a92bc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Username</con:name><con:sourceType>Username</con:sourceType><con:sourceStep>Username and Password Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:username
</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Password</con:name><con:sourceType>Password</con:sourceType><con:sourceStep>Username and Password Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:password</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Login" id="0be3866e-bbe6-4ba0-bf56-d27040b697f2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="8e514944-fb15-4665-8820-c534c00eea7f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>Abhilash</ns:username>
         <ns:password>Welcome1</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="da6da0c9-afa1-4724-b882-834af9da8ff6"/><con:assertion type="Schema Compliance" id="4e381cb4-3ac3-4a34-b49a-0c1c9f424425"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="402ab6b7-754b-46ea-8885-2a5a5e06b6ac"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="sessionId transfer" id="f0db1f21-8bc4-4b97-a899-3f6a3b2caf0e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Logout</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>findstring</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Purchase</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Find" id="8f6747e6-b49a-453c-8889-b0c6da78386c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="7e8ea75e-3025-4a52-a8b7-356a90490c4a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findRequest>
         <ns:sessionId>28791705215588115</ns:sessionId>
         <ns:findString>Android Tablet</ns:findString>
      </ns:findRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5223a856-5121-4696-9e55-bd5e903fd497"/><con:assertion type="Schema Compliance" id="cbf98258-eacb-4a3a-b361-65af8bb941f7"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e15b5274-9127-42bc-b5fd-059a2a3ee16b"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Purchase" id="2739c04a-9b55-4a06-b517-af68c6ad1d1e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="6bb0eb28-1a1f-4492-83b9-483354ec9452"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>28791705215588115</ns:sessionId>
         <ns:purchaseItem>Android Tablet</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e3e691a3-2b78-46d0-95a6-8763b5b2b8a9"/><con:assertion type="Schema Compliance" id="97565eb4-9c88-49ce-8132-744f1f198b19"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e81a1e9a-2e67-4110-8933-9f4deeadd670"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="9272eafa-f052-4ab6-946e-632b3275107b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="f11b08fe-a15f-4a88-a4b6-e31b0f1efcf7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>28791705215588115</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="88c69582-2800-4446-8179-683b169ae327"/><con:assertion type="Schema Compliance" id="ac4b5ba5-7972-4dfe-b417-2586f3b87072"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="a4a2deb2-bc6a-40c7-949b-83d3b13a8228"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="878facba-b372-4307-84d6-cb563a5063d3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Property Expansion Login And Logout" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and Password Properties" id="0801eb18-e3f4-4653-9e92-4560f521023b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Username</con:name><con:value>username</con:value></con:property><con:property><con:name>Password</con:name><con:value>password</con:value></con:property><con:property><con:name>findString</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Login" id="e34868ad-f43a-47cf-be49-7707f357b7d7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="8e514944-fb15-4665-8820-c534c00eea7f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${Username and Password Properties#Username}</ns:username>
         <ns:password>${Username and Password Properties#password}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="da6da0c9-afa1-4724-b882-834af9da8ff6"/><con:assertion type="Schema Compliance" id="4e381cb4-3ac3-4a34-b49a-0c1c9f424425"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="402ab6b7-754b-46ea-8885-2a5a5e06b6ac"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Find" id="89eb87b7-60a4-4e86-b64b-895abd4df5ff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="efe06103-684d-4716-88fd-564ee4be270c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:findString>${Username and Password Properties#findString}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="060f98d6-1905-4fda-aeff-41cdb0c762cd"/><con:assertion type="Schema Compliance" id="26b0f477-7428-4c0a-911b-b63531dcc128"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="db59114d-2878-4ddf-8321-36fc11f99c8e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="To Purchase or Not To Purchase" id="fbaf3186-64c8-4a2c-b003-aea4041a8721"><con:settings/><con:config><script>//if the user is Abhilash do the purchase

//first step to fetch the username

def username = context.expand('${Login#Request#//*:username}')
log.info username

//What is my next step
if(username!="Abhilash")
{
	log.info "Not a Previlaged user -No purchase"
	//if i want to skip any step then i do this
	testRunner.gotoStepByName("Logout")
}
else
{
	log.info "proceed to the purchase"
}
</script></con:config></con:testStep><con:testStep type="request" name="Purchase" id="4dac88ae-d3b3-43df-ba0f-5e80d46e6c15"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="83046dd5-f3f4-4586-a3e1-78c658ff5fd5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${Username and Password Properties#findString}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72b2da1e-5441-4dc2-aa87-e5867b1d2405"/><con:assertion type="Schema Compliance" id="d42c6b1f-68ec-4e76-9c0c-7760c7ec6c10"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="54c1a9ef-cf80-4784-8024-a1483b293d15"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="dfae3604-12d7-438d-8b1e-2436969f99ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="872b27ea-284a-4d30-a6a9-867095438fa3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e873ca3d-b9c0-467d-9c70-7e5de870989d"/><con:assertion type="Schema Compliance" id="cedc601d-04e4-444b-a9f0-72545dd02f35"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="fc04c9f1-45ba-4e6e-9749-3a59c0d57e30"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fb172df7-5697-47b9-86c8-cfab6d81620c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Script Based Execution" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and Password Properties" id="81650e20-cb56-4079-a9cc-98bc07db157e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Username</con:name><con:value>Niharika</con:value></con:property><con:property><con:name>Password</con:name><con:value>Welcome12</con:value></con:property><con:property><con:name>findString</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Login" id="33e22995-584b-41d1-b0f6-ccccefdcf9a9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="8e514944-fb15-4665-8820-c534c00eea7f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${Username and Password Properties#Username}</ns:username>
         <ns:password>${Username and Password Properties#password}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="da6da0c9-afa1-4724-b882-834af9da8ff6"/><con:assertion type="Schema Compliance" id="4e381cb4-3ac3-4a34-b49a-0c1c9f424425"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="402ab6b7-754b-46ea-8885-2a5a5e06b6ac"/><con:assertion type="GroovyScriptAssertion" id="69ff3c08-cbf4-4df0-9325-c58b36702eef" name=" get and store response"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
//i am going to write a groovy script to capture the response and fetch the sessionID and stor it in test case/test suite level
//i have cretead a varibale called response
//i want to fetch the entire response and store it in this variable
def response = context.testCase.getTestStepByName('Login').getPropertyValue("Response")
//holder
//i want to store this entire response in a holder
//so that i can get a specify data and storeit again
def holder = new XmlHolder(response)
//get node value is used when i want to fetch a specific response data
def sess = holder.getNodeValue("//*:sessionId")
//i want to store this session id in test suite level sothat i can use it in all my test case
context.testCase.testSuite.setPropertyValue("sessionId",sess)
//can i store it in the test case
context.testCase.setPropertyValue("sessionId",sess)
//i want to access this acroos project level
context.testCase.testSuite.project.setPropertyValue("sessionId",sess)
log.info sess</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Find" id="6fc62b48-4b0b-4ceb-b621-8acaf5a78bfa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="86e160f1-be75-4160-894a-bb1b66bade84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
         <ns:findString>${Username and Password Properties#findString}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4e68f6e-c222-4bb4-b761-f1523b9f217e"/><con:assertion type="Schema Compliance" id="e564e6fc-c7a0-4786-9561-34a45dbf0b3c"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="fbf36653-2348-4fd9-bd72-9b8de964a153"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Purchase" id="d9c744a8-cbb3-499f-85a0-359a33843857"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="1934746e-535c-4277-a5c9-86821b99da57"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${Username and Password Properties#findString}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="428cb3f8-cbce-409a-87d5-b316b07504d4"/><con:assertion type="Schema Compliance" id="1f6afb16-f1ef-4725-a224-3edead1c1ddd"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7f7f6c9e-b337-4005-867d-bb8d2303d1b8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="76311ec2-2c75-4bfc-87c8-9676742ae754"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="872b27ea-284a-4d30-a6a9-867095438fa3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e873ca3d-b9c0-467d-9c70-7e5de870989d"/><con:assertion type="Schema Compliance" id="cedc601d-04e4-444b-a9f0-72545dd02f35"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="fc04c9f1-45ba-4e6e-9749-3a59c0d57e30"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>sessionId</con:name><con:value>6686301319272607</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>sessionId</con:name><con:value>6686301319272607</con:value></con:property></con:properties></con:testSuite><con:testSuite id="36b11a12-5002-4255-b398-58416571bca2" name="System Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="817b3a95-dd0c-4e1c-934a-cc0f24a0bc6b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System Testing" searchProperties="true"><con:settings/><con:testStep type="groovy" name="System testing" id="5977980a-a018-4970-90a1-e4020e4f2561"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
//From here i want to execute Script Based Execution
//if i want to run script based execution from here i have to use Test Runner
//coz it is in different test suite
def tc = testRunner.testCase.testSuite.project.testSuites["Shopping Service Functional"].testCases["Script Based Execution"]
tc.testSteps["Username and Password Properties"].setPropertyValue("username","Niharika")
tc.testSteps["Username and Password Properties"].setPropertyValue("password","Welcome12")
//i am running the entire test case by changing the data
//if you are running more then one step in testcase
//you have to say null means there is no context and false is coz i am not checking any condition
tc.run(null,false)
//i want to check what all the steps got executed
def teststeplist = tc.getTestStepList()
log.info teststeplist.size()
//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}</script></con:config></con:testStep><con:testStep type="groovy" name="Execute Property Expansion Login And Logout" id="06e8b580-c261-4615-86f3-ca92b7afb4b8"><con:settings/><con:config><script>def tc = testRunner.testCase.testSuite.project.testSuites["Shopping Service Functional"].testCases["Property Expansion Login And Logout"]
tc.testSteps["Username and Password Properties"].setPropertyValue("username","Abhilash")
tc.testSteps["Username and Password Properties"].setPropertyValue("password","Welcome1")
//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()
//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}
//i want to know the status of my execution
//this will provide me the execution status
log.info "Status: $runner.status "
//This will provide me the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//i want to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
def validname = 6
def invalid = 5
//Assert
if(runner.results.size()==6)
{
	log.info "The Entered Name is valid"
	assert runner.results.size()==validname
}
else
{
	log.info "The Entered Name is Invalid"
	assert runner.results.size()==invalid
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Data Driven Test" id="7cbd1a9b-2248-4e65-af23-d80544e99642"><con:settings/><con:config><script>//jxl is a jar which helps connect to the excel toread and write data for me
//since i am a tester i read dataimport jxl.*
import jxl.*

def filepath="C://Users//Moolya//Desktop//text note1.xls"
//where the file is to read
File Excel = new File(filepath)
def username, password
//excelsheet basically it contains workbook and sheets
//i have to get the workbook
Workbook wb = Workbook.getWorkbook(Excel)
//i am trying to get the sheet
Sheet sh = wb.getSheet("Sheet1")
def row = sh.getRows().toInteger()
def column = sh.getColumns().toInteger()
log.info "The number of rows are $row and The Number of column are $column"

//i want to fetch the data in each row and column
for(def i=0;i&lt;row;i++)
{
	for(def j=0;j&lt;column;j++)
	{
		if(j==0)
		{
			username = sh.getCell(j,i).getContents()
		}
		else
		{
			password = sh.getCell(j,i).getContents()
		}
	}
	def tc = testRunner.testCase.testSuite.project.testSuites["Shopping Service Functional"].testCases["Property Expansion Login And Logout"]
tc.testSteps["Username and Password Properties"].setPropertyValue("username","username")
tc.testSteps["Username and Password Properties"].setPropertyValue("password","password")
//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()
//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}
//i want to know the status of my execution
//this will provide me the execution status
log.info "Status: $runner.status "
//This will provide me the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//i want to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
def validname = 6
def invalid = 5
//Assert
if(runner.results.size()==6)
{
	log.info "The Entered Name is valid"
	assert runner.results.size()==validname
}
else
{
	log.info "The Entered Name is Invalid"
	assert runner.results.size()==invalid
}

}














</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="914e820b-4864-454b-896c-85d921ed86e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Database testing" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="JDBC Request" id="37cb1856-dac7-44e1-8a54-9b05bf533a34"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/FunctionalTesting?user=root&amp;password=root</con:connectionString><con:query>Select * From Login;</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="Login" id="5a5a7773-595a-4154-92da-3e5de5c34273"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="1400f204-5214-4541-8027-e15a058ea34e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${JDBC Request#ResponseAsXml#//ResultSet/Row[3]/LOGIN.NAME}</ns:username>\r
         <ns:password>${JDBC Request#ResponseAsXml#//ResultSet/Row[3]/LOGIN.PASSWORD}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="350b9a4a-e122-4522-8412-2ec3a0a47010"/><con:assertion type="Schema Compliance" id="07a94c55-3aad-46a3-81b4-d05a53c74c6e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="137eda6d-e03f-4fa8-ba75-4897ade8041d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="245e1da5-51f2-4781-bb52-76f2497e63d9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="512b0c69-74a1-4540-a92b-8b590df1070b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-6H66OCF:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4bc88824-ee13-422e-a759-e640943af908"/><con:assertion type="Schema Compliance" id="69604ee0-1276-4b3e-8a7d-92978bf8be14"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="40effde4-8c7a-4753-a4a0-ee76d8724d0a"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="8088" path="/mockShoppingService" host="chethan-PC" name="ShoppingServiceSoapBinding MockService" bindToHostOnly="false" docroot="" id="2c794479-3d6a-4fcb-b26f-d9b469b4a771"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="find" interface="ShoppingServiceSoapBinding" operation="find" id="bd35987f-0f5b-4612-a838-1e2d14d9955d"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP006'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:findString" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemDescription = item.desc
	requestContext.itemPrice = item.price
	return "Successful Find"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP007'
requestContext.faultShortDesc = 'Invalid Query'
requestContext.faultCausedBy = 'Search System'
requestContext.faultDesc = 'In the demo we do not support generic queries and we could not find any items with the given string!!!'
return "Fault Find"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Find" encoding="UTF-8" id="39320be4-653b-49f5-9eb2-442410f1d4ff" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findResponse>
         <ns:item>
            <ns:id>${itemId}</ns:id>
            <ns:description>${itemDescription}</ns:description>
            <ns:price>${itemPrice}</ns:price>
         </ns:item>
      </ns:findResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:response name="Fault Find" encoding="UTF-8" id="849b8c60-0153-467f-ae6c-9fa3e9c09828" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="login" interface="ShoppingServiceSoapBinding" operation="login" id="8427cc18-f43a-40d7-b154-074b41edb3ce"><con:settings/><con:dispatchPath>// Initialize Util classes to retrieve XML value
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the username and Password values provided
def username = holder.getNodeValue( "//*:username" )
def password = holder.getNodeValue( "//*:password" )

// validate by checking that the User is not already logged in
// Username is of required length and Password doesn't end with 123!!!
if( context.hasProperty( username )  || username.length() > 10 || username.length() &lt; 3 || password.endsWith( "123" )){
	// If user is already loggged in, set different fault codes compared to others
	if(context.hasProperty( username )){
		requestContext.faultCode = 'APP001'
		requestContext.faultShortDesc = 'Already Logged In'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'User is already logged in. If you want to login as another user logout first'
	}
	else{
		// Set relevant error code and desc. For the demo, we will keep it simple
		requestContext.faultCode = 'APP002'
		requestContext.faultShortDesc = 'Invalid Login Credentials'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'Invalid Login Credentials. Please try again.'
	}
	// Specify which response to send back
	return "Fault Login"	
}

// Seems like a valid request, so generate session ID
// Note that we don't do password verification in the demo
def sessionid = String.valueOf( Math.random() ).substring( 2 )

// Set the user name and session ID as valid sessions and logged in user in context
// This helps in looking up to see if the user is logged in or if this is a valid session ID
context.setProperty( username, sessionid )
context.setProperty( sessionid, username )

requestContext.sessionid = sessionid
return "Successful Login"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Successful Login</con:defaultResponse><con:response name="Successful Login" encoding="UTF-8" id="3cba0129-ebb9-4c20-be4b-2c254533bd60" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sessionId>${sessionid}</ns:sessionId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:response name="Fault Login" encoding="UTF-8" id="ad79f755-240e-4191-8187-dd3b3b770563" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
        <ns:faultMessage>${faultDesc}</ns:faultMessage>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="logout" interface="ShoppingServiceSoapBinding" operation="logout" id="b22c98ee-1db3-47c1-9df6-050a5ea4c56c"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP003'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Logout"
}

// logout from the system by removing the relevant context
context.removeProperty( context.getProperty( sessionid ))
context.removeProperty( sessionid )
requestContext.logoutMessage = "Successfully logged out of the system."

return "Successful Logout"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Logout" encoding="UTF-8" id="089a7bb7-d308-4861-b9bf-730bbc671285" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutResponse>
         <ns:logoutMessage>${logoutMessage}</ns:logoutMessage>
      </ns:logoutResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:response name="Fault Logout" encoding="UTF-8" id="dea0557d-695b-4816-8c2f-fbda05f48bfc" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="purchase" interface="ShoppingServiceSoapBinding" operation="purchase" id="78519ee3-2367-4743-9ec2-85109fda92ec"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP010'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:purchaseItem" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemStockStatus = item.stockStatus
	requestContext.itemExpectedDelivery = item.expectedDelivery
	return "Successful Purchase"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP011'
requestContext.faultShortDesc = 'Invalid Item'
requestContext.faultCausedBy = 'Purchase System'
requestContext.faultDesc = 'In the demo we do not support bulk buys or add to cart kind of operations. We could not find any items with the given name!!!'
return "Fault Purchase"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Purchase" encoding="UTF-8" id="74a68bc4-23ee-4d24-9a04-694fabcb84c2" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseResponse>
         <ns:purchaseStatus>
            <ns:id>${itemId}</ns:id>
            <ns:stockStatus>${itemStockStatus}</ns:stockStatus>
            <ns:expectedDelivery>${itemExpectedDelivery}</ns:expectedDelivery>
         </ns:purchaseStatus>
      </ns:purchaseResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:response name="Fault Purchase" encoding="UTF-8" id="ea68134e-206e-4fae-8ba6-479a2c554229" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      	${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:dispatchConfig/></con:mockOperation><con:startScript>/*
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP" ]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP" ]

context.setProperty("itemList", itemList)
*/</con:startScript><con:properties/></con:mockService><con:properties><con:property><con:name>sessionId</con:name><con:value>6686301319272607</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>